[
  {
    "address": "0x0000000000000000000000000000000000001001",
    "name": "Auth",
    "bytecode": "0x00",
    "compiler": "v0.8.20+commit.a1b79de6",
    "source": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Coin defines a token with a denomination and an amount.\n */\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n/**\n * @dev DecCoin defines a token with a denomination and a decimal amount.\n */\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev Dec defines decimal with a precision. for example, amount:16800, precision:3 means is 16.800\n */\nstruct Dec {\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev PageRequest is to be embedded in request messages for efficient pagination\n */\nstruct PageRequest {\n    // key is a value returned in PageResponse.next_key to begin\n    // querying the next page most efficiently. Only one of offset or key\n    // should be set.\n    bytes key;\n    // offset is a numeric offset that can be used when key is unavailable.\n    // It is less efficient than using key. Only one of offset or key should\n    // be set.\n    uint64 offset;\n    // limit is the total number of results to be returned in the result page.\n    // If left empty it will default to a value to be set by each app.\n    uint64 limit;\n    // countTotal is set to true to indicate that the result set should include\n    // a count of the total number of items available for pagination in UIs.\n    // count_total is only respected when offset is used. It is ignored when key\n    // is set.\n    bool countTotal;\n    // reverse is set to true if results are to be returned in the descending order.\n    bool reverse;\n}\n/**\n * @dev PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n */\nstruct PageResponse {\n    // nextKey is the key to be passed to PageRequest.key to\n    // query the next page most efficiently. It will be empty if\n    // there are no more results.\n    bytes nextKey;\n    // total is total number of results available if PageRequest.count_total\n    // was set, its value is undefined otherwise\n    uint64 total;\n}\n\n/// @dev The IAuth contract's address.\naddress constant AUTH_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000001001;\n\n/// @dev The IAuth contract's instance.\nIAuth constant AUTH_CONTRACT = IAuth(AUTH_PRECOMPILE_ADDRESS);\n\n/**\n * @dev Account defines the account for the auth module.\n */\nstruct Account {\n    address addr;\n    string pubKey;\n    uint64 accountNumber;\n    uint64 sequence;\n}\n\n/**\n * @dev ModuleAccount defines the module account for the auth module.\n */\nstruct ModuleAccount {\n    address addr;\n    string pubKey;\n    uint64 accountNumber;\n    uint64 sequence;\n    string name;\n    string[] permissions;\n}\n\n/**\n * @dev Params defines the parameters for the auth module.\n */\nstruct Params {\n    uint64 maxMemoCharacters;\n    uint64 txSigLimit;\n    uint64 txSizeCostPerByte;\n    uint64 sigVerifyCostEd25519;\n    uint64 sigVerifyCostSecp256k1;\n}\n\ninterface IAuth {\n    /**\n     * @dev account returns account details based on address.\n     */\n    function account(\n        address addr\n    ) external view returns (Account memory account);\n\n    /**\n     * @dev accounts returns all the existing accounts\n     */\n    function accounts(\n        PageRequest memory pageRequest\n    ) external view returns (Account[] memory accounts, PageResponse memory pageResponse);\n\n    /**\n     * @dev moduleAccount returns module account details based on address.\n     */\n    function moduleAccountByName(\n        string memory name\n    ) external view returns (ModuleAccount memory moduleAccount);\n\n    /**\n     * @dev moduleAccounts returns all the existing module accounts\n     */\n    function moduleAccounts( ) external view returns (ModuleAccount[] memory moduleAccounts);\n\n    /**\n     * @dev accountAddressByID returns account address based on account number.\n     */\n    function accountAddressByID(\n        int64 id\n    ) external view returns (address addr);\n\n    /**\n     * @dev params queries the parameters of x/auth module.\n     */\n    function params() external view returns (Params memory params);\n}\n",
    "abi": "[\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"account\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"addr\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"pubKey\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"accountNumber\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"sequence\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct Account\",\n        \"name\": \"account\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"int64\",\n        \"name\": \"id\",\n        \"type\": \"int64\"\n      }\n    ],\n    \"name\": \"accountAddressByID\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pageRequest\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"accounts\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"addr\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"pubKey\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"accountNumber\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"sequence\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct Account[]\",\n        \"name\": \"accounts\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"moduleAccountByName\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"addr\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"pubKey\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"accountNumber\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"sequence\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"name\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string[]\",\n            \"name\": \"permissions\",\n            \"type\": \"string[]\"\n          }\n        ],\n        \"internalType\": \"struct ModuleAccount\",\n        \"name\": \"moduleAccount\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"moduleAccounts\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"addr\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"pubKey\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"accountNumber\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"sequence\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"name\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string[]\",\n            \"name\": \"permissions\",\n            \"type\": \"string[]\"\n          }\n        ],\n        \"internalType\": \"struct ModuleAccount[]\",\n        \"name\": \"moduleAccounts\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"params\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"maxMemoCharacters\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"txSigLimit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"txSizeCostPerByte\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"sigVerifyCostEd25519\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"sigVerifyCostSecp256k1\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct Params\",\n        \"name\": \"params\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]"
  },
  {
    "address": "0x0000000000000000000000000000000000001000",
    "name": "Bank",
    "bytecode": "0x00",
    "compiler": "v0.8.20+commit.a1b79de6",
    "source": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Coin defines a token with a denomination and an amount.\n */\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n/**\n * @dev DecCoin defines a token with a denomination and a decimal amount.\n */\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev Dec defines decimal with a precision. for example, amount:16800, precision:3 means is 16.800\n */\nstruct Dec {\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev PageRequest is to be embedded in request messages for efficient pagination\n */\nstruct PageRequest {\n    // key is a value returned in PageResponse.next_key to begin\n    // querying the next page most efficiently. Only one of offset or key\n    // should be set.\n    bytes key;\n    // offset is a numeric offset that can be used when key is unavailable.\n    // It is less efficient than using key. Only one of offset or key should\n    // be set.\n    uint64 offset;\n    // limit is the total number of results to be returned in the result page.\n    // If left empty it will default to a value to be set by each app.\n    uint64 limit;\n    // countTotal is set to true to indicate that the result set should include\n    // a count of the total number of items available for pagination in UIs.\n    // count_total is only respected when offset is used. It is ignored when key\n    // is set.\n    bool countTotal;\n    // reverse is set to true if results are to be returned in the descending order.\n    bool reverse;\n}\n/**\n * @dev PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n */\nstruct PageResponse {\n    // nextKey is the key to be passed to PageRequest.key to\n    // query the next page most efficiently. It will be empty if\n    // there are no more results.\n    bytes nextKey;\n    // total is total number of results available if PageRequest.count_total\n    // was set, its value is undefined otherwise\n    uint64 total;\n}\n\n/**\n * @dev Output defines the send coins info.\n */\nstruct Output {\n    address toAddress;\n    Coin[] amount;\n}\n\n/**\n * @dev SendEnabled maps coin denom to a send_enabled status (whether a denom is\n * sendable).\n */\nstruct SendEnabled {\n    string denom;\n    bool enabled;\n}\n\n/**\n * @dev Params defines the parameters for the bank module.\n */\nstruct Params {\n    SendEnabled[] sendEnabled;\n    bool defaultSendEnabled;\n}\n/**\n * @dev DenomUnit represents a struct that describes a given\n * denomination unit of the basic token.\n */\nstruct DenomUnit {\n    // denom represents the string name of the given denom unit (e.g uatom).\n    string denom;\n    // exponent represents power of 10 exponent that one must\n    // raise the base_denom to in order to equal the given DenomUnit's denom\n    // 1 denom = 1^exponent base_denom\n    // (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with\n    // exponent = 6, thus: 1 atom = 10^6 uatom).\n    uint32 exponent;\n    // aliases is a list of string aliases for the given denom\n    string[] aliases;\n}\n\n/**\n * @dev Metadata represents a struct that describes a basic token.\n */\nstruct Metadata {\n    string description;\n    // denomUnits represents the list of DenomUnit's for a given coin\n    DenomUnit[] denomUnits;\n    // base represents the base denom (should be the DenomUnit with exponent = 0).\n    string base;\n    // display indicates the suggested denom that should be\n    // displayed in clients.\n    string display;\n    // name defines the name of the token (eg: Cosmos Atom)\n    string name;\n    // symbol is the token symbol usually shown on exchanges (eg: ATOM). This can\n    // be the same as the display.\n    string symbol;\n    // URI to a document (on or off-chain) that contains additional information. Optional.\n    string uri;\n    // URIHash is a sha256 hash of a document pointed by URI. It's used to verify that\n    // the document didn't change. Optional.\n    string uriHash;\n}\n\n/**\n * @dev DenomOwner defines structure representing an account that owns or holds a\n * particular denominated token. It contains the account address and account\n * balance of the denominated token.\n */\nstruct DenomOwner {\n    address accountAddress;\n    Coin balance;\n}\n\ninterface IBank {\n    /**\n     * @dev send defines a method for sending coins from one account to another account.\n     */\n    function send(\n        address toAddress,\n        Coin[] memory amount\n    ) external returns (bool success);\n\n    /**\n     * @dev multiSend defines a method for sending coins from some accounts to other accounts.\n     */\n    function multiSend(\n        Output[] memory outputs\n    ) external returns (bool success);\n\n    /**\n     * @dev balance queries the balance of a single coin for a single account.\n     */\n    function balance(\n        address accountAddress,\n        string memory denom\n    ) external view returns (Coin memory balance);\n\n    /**\n     * @dev allBalances queries the balance of all coins for a single account.\n     */\n    function allBalances(\n        address accountAddress,\n        PageRequest memory pageRequest\n    ) external view returns (Coin[] memory balances, PageResponse memory pageResponse);\n\n    /**\n     * @dev totalSupply queries the total supply of all coins.\n     */\n    function totalSupply() external view returns (Coin[] memory supply);\n\n    /**\n     * @dev spendableBalances queries the spenable balance of all coins for a single account.\n     */\n    function spendableBalances(\n        address accountAddress,\n        PageRequest memory pageRequest\n    ) external view returns (Coin[] memory balances, PageResponse memory pageResponse);\n\n    /**\n     * @dev supplyOf queries the supply of a single coin.\n     */\n    function supplyOf(string memory denom) external view returns (Coin memory amount);\n\n    /**\n     * @dev params queries the parameters of x/bank module.\n     */\n    function params() external view returns (Params memory params);\n\n    /**\n     * @dev denomMetadata queries the client metadata of a given coin denomination.\n     */\n    function denomMetadata(string memory denom) external view returns (Metadata memory metadata);\n\n    /**\n     * @dev denomsMetadata queries the client metadata for all registered coin denominations.\n     */\n    function denomsMetadata(\n        PageRequest memory pageRequest\n    ) external view returns (Metadata[] memory metadatas, PageResponse memory pageResponse);\n\n    /**\n     * @dev DenomOwners queries for all account addresses that own a particular token denomination.\n     */\n    function denomOwners(\n        string memory denom,\n        PageRequest memory pageRequest\n    ) external view returns (DenomOwner[] memory denomOwners, PageResponse memory pageResponse);\n\n    /**\n     * @dev Send defines an Event emitted when a given amount of tokens send fromAddress to toAddress\n     */\n    event Send(\n        address indexed fromAddress,\n        address indexed toAddress,\n        string amount\n    );\n\n    /**\n     * @dev MultiSend defines an Event emitted when a given amount of tokens send from a address to some other addresses\n     */\n    event MultiSend(\n        address indexed fromAddress,\n        string amount\n    );\n}\n",
    "abi": "[\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"fromAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"amount\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"MultiSend\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"fromAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"toAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"amount\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"Send\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"accountAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pageRequest\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"allBalances\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin[]\",\n        \"name\": \"balances\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"accountAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"denom\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"balance\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin\",\n        \"name\": \"balance\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"denom\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"denomMetadata\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"description\",\n            \"type\": \"string\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint32\",\n                \"name\": \"exponent\",\n                \"type\": \"uint32\"\n              },\n              {\n                \"internalType\": \"string[]\",\n                \"name\": \"aliases\",\n                \"type\": \"string[]\"\n              }\n            ],\n            \"internalType\": \"struct DenomUnit[]\",\n            \"name\": \"denomUnits\",\n            \"type\": \"tuple[]\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"base\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"display\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"name\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"symbol\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"uri\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"uriHash\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Metadata\",\n        \"name\": \"metadata\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"denom\",\n        \"type\": \"string\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pageRequest\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"denomOwners\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"accountAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin\",\n            \"name\": \"balance\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct DenomOwner[]\",\n        \"name\": \"denomOwners\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pageRequest\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"denomsMetadata\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"description\",\n            \"type\": \"string\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint32\",\n                \"name\": \"exponent\",\n                \"type\": \"uint32\"\n              },\n              {\n                \"internalType\": \"string[]\",\n                \"name\": \"aliases\",\n                \"type\": \"string[]\"\n              }\n            ],\n            \"internalType\": \"struct DenomUnit[]\",\n            \"name\": \"denomUnits\",\n            \"type\": \"tuple[]\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"base\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"display\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"name\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"symbol\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"uri\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"uriHash\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Metadata[]\",\n        \"name\": \"metadatas\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"toAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin[]\",\n            \"name\": \"amount\",\n            \"type\": \"tuple[]\"\n          }\n        ],\n        \"internalType\": \"struct Output[]\",\n        \"name\": \"outputs\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"name\": \"multiSend\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"params\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"enabled\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct SendEnabled[]\",\n            \"name\": \"sendEnabled\",\n            \"type\": \"tuple[]\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"defaultSendEnabled\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct Params\",\n        \"name\": \"params\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"toAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin[]\",\n        \"name\": \"amount\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"name\": \"send\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"accountAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pageRequest\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"spendableBalances\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin[]\",\n        \"name\": \"balances\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"denom\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"supplyOf\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin\",\n        \"name\": \"amount\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin[]\",\n        \"name\": \"supply\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]"
  },
  {
    "address": "0x0000000000000000000000000000000000001004",
    "name": "Distribution",
    "bytecode": "0x00",
    "compiler": "v0.8.20+commit.a1b79de6",
    "source": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Coin defines a token with a denomination and an amount.\n */\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n/**\n * @dev DecCoin defines a token with a denomination and a decimal amount.\n */\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev Dec defines decimal with a precision. for example, amount:16800, precision:3 means is 16.800\n */\nstruct Dec {\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev PageRequest is to be embedded in request messages for efficient pagination\n */\nstruct PageRequest {\n    // key is a value returned in PageResponse.next_key to begin\n    // querying the next page most efficiently. Only one of offset or key\n    // should be set.\n    bytes key;\n    // offset is a numeric offset that can be used when key is unavailable.\n    // It is less efficient than using key. Only one of offset or key should\n    // be set.\n    uint64 offset;\n    // limit is the total number of results to be returned in the result page.\n    // If left empty it will default to a value to be set by each app.\n    uint64 limit;\n    // countTotal is set to true to indicate that the result set should include\n    // a count of the total number of items available for pagination in UIs.\n    // count_total is only respected when offset is used. It is ignored when key\n    // is set.\n    bool countTotal;\n    // reverse is set to true if results are to be returned in the descending order.\n    bool reverse;\n}\n/**\n * @dev PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n */\nstruct PageResponse {\n    // nextKey is the key to be passed to PageRequest.key to\n    // query the next page most efficiently. It will be empty if\n    // there are no more results.\n    bytes nextKey;\n    // total is total number of results available if PageRequest.count_total\n    // was set, its value is undefined otherwise\n    uint64 total;\n}\n\n/**\n * @dev DelegationDelegatorReward represents the properties of a delegator's delegation reward\n */\nstruct DelegationDelegatorReward {\n    address validatorAddress;\n    DecCoin[] rewards;\n}\n\n\n/**\n * @dev Params defines the set of params for the distribution module.\n */\nstruct Params {\n    uint256 communityTax;\n    uint256 baseProposerReward;\n    uint256 bonusProposerReward;\n    bool withdrawAddrEnabled;\n}\n\n\n/**\n * @dev QueryValidatorSlashesRequest is the request type for the\n * Query/ValidatorSlashes RPC method\n */\nstruct QueryValidatorSlashesRequest {\n    string validatorAddress;\n    uint64 startingHeight;\n    uint64 endingHeight;\n    PageRequest pagination;\n}\n\n/**\n * @dev ValidatorSlashEvent represents a validator slash event.\n * Height is implicit within the store key.\n * This is needed to calculate appropriate amount of staking tokens\n * for delegations which are withdrawn after a slash has occurred.\n */\nstruct ValidatorSlashEvent {\n    uint64 validatorPeriod;\n    uint256 fraction;\n}\n\ninterface IDistribution {\n    /**\n     * @dev setWithdrawAddress SetWithdrawAddress defines a method to change the withdraw address\n     * for a delegator (or validator self-delegation).\n     */\n    function setWithdrawAddress(\n        address withdrawAddress\n    ) external returns (bool success);\n\n    /**\n     * @dev withdrawDelegatorReward defines a method to withdraw rewards of delegator\n     * from a single validator.\n     */\n    function withdrawDelegatorReward(\n        address validatorAddress\n    ) external returns (Coin[] memory amount);\n\n    /**\n     * @dev withdrawValidatorCommission defines a method to withdraw the\n     * full commission to the validator address.\n     */\n    function withdrawValidatorCommission() external returns (Coin[] memory amount);\n\n    /**\n     * @dev fundCommunityPool defines a method to allow an account to directly\n     * fund the community pool.\n     */\n    function fundCommunityPool(\n        Coin[] memory amount\n    ) external returns (bool success);\n\n    /**\n     * @dev validatorDistributionInfo queries validator commision and self-delegation rewards for validator\n     */\n    function validatorDistributionInfo(\n        address validatorAddress\n    ) external view returns (address operatorAddress, DecCoin[] memory selfBondRewards, DecCoin[] memory commission);\n\n    /**\n     * @dev validatorOutstandingRewards queries rewards of a validator address.\n     */\n    function validatorOutstandingRewards(\n        address validatorAddress\n    ) external view returns (DecCoin[] memory rewards);\n\n    /**\n     * @dev validatorCommission queries accumulated commission for a validator.\n     */\n    function validatorCommission(\n        address validatorAddress\n    ) external view returns (DecCoin[] memory commission);\n\n    /**\n     * @dev delegationRewards queries the total rewards accrued by a delegation.\n     */\n    function delegationRewards(\n        address delegatorAddress,\n        address validatorAddress\n    ) external view returns (DecCoin[] memory rewards);\n\n    /**\n     * @dev delegationTotalRewards queries the total rewards accrued by a each validator.\n     */\n    function delegationTotalRewards(\n        address delegatorAddress\n    ) external view returns (DelegationDelegatorReward[] memory rewards, DecCoin[] memory total);\n\n    /**\n     * @dev communityPool queries the community pool coins.\n     */\n    function communityPool() external view returns (DecCoin[] memory pool);\n\n    /**\n     * @dev params queries params of the distribution module.\n     */\n    function params() external view returns (Params memory params);\n\n    /**\n     * @dev validatorSlashes queries slash events of a validator.\n     */\n    function validatorSlashes(\n        address validatorAddress,\n        uint64 startingHeight,\n        uint64 endingHeight,\n        PageRequest calldata pagination\n    ) external view returns (ValidatorSlashEvent[] memory validatorSlashEvents, PageResponse memory pageResponse);\n\n    /**\n     * @dev delegatorValidators queries the validators of a delegator.\n     */\n    function delegatorValidators(\n        address delegatorAddress\n    ) external view returns (address[] memory validators);\n\n    /**\n     * @dev delegatorWithdrawAddress queries withdraw address of a delegator.\n     */\n    function delegatorWithdrawAddress(\n        address delegatorAddress\n    ) external view returns (address withdrawAddress);\n\n    /**\n     * @dev SetWithdrawAddress defines an Event emitted when a user change the withdraw address\n     */\n    event SetWithdrawAddress(\n        address indexed delegatorAddress,\n        address indexed withdrawAddress\n    );\n\n    /**\n     * @dev WithdrawDelegatorReward defines an Event emitted when withdraw rewards by delegator\n     */\n    event WithdrawDelegatorReward(\n        address indexed delegatorAddress,\n        address indexed withdrawAddress,\n        string amount\n    );\n\n    /**\n     * @dev WithdrawValidatorCommission defines an Event emitted when withdraw commission by validator\n     */\n    event WithdrawValidatorCommission(\n        address indexed validatorAddress,\n        string amount\n    );\n\n    /**\n     * @dev FundCommunityPool defines an Event emitted when a user fund community pool\n     */\n    event FundCommunityPool(\n        address indexed depositor,\n        string amount\n    );\n}\n",
    "abi": "[\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"depositor\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"amount\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"FundCommunityPool\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"SetWithdrawAddress\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"amount\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"WithdrawDelegatorReward\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"amount\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"WithdrawValidatorCommission\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"communityPool\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct DecCoin[]\",\n        \"name\": \"pool\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"delegationRewards\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct DecCoin[]\",\n        \"name\": \"rewards\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"delegationTotalRewards\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"validatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8\",\n                \"name\": \"precision\",\n                \"type\": \"uint8\"\n              }\n            ],\n            \"internalType\": \"struct DecCoin[]\",\n            \"name\": \"rewards\",\n            \"type\": \"tuple[]\"\n          }\n        ],\n        \"internalType\": \"struct DelegationDelegatorReward[]\",\n        \"name\": \"rewards\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct DecCoin[]\",\n        \"name\": \"total\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"delegatorValidators\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"validators\",\n        \"type\": \"address[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"delegatorWithdrawAddress\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin[]\",\n        \"name\": \"amount\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"name\": \"fundCommunityPool\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"params\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"communityTax\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"baseProposerReward\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"bonusProposerReward\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"withdrawAddrEnabled\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct Params\",\n        \"name\": \"params\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"setWithdrawAddress\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"validatorCommission\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct DecCoin[]\",\n        \"name\": \"commission\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"validatorDistributionInfo\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct DecCoin[]\",\n        \"name\": \"selfBondRewards\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct DecCoin[]\",\n        \"name\": \"commission\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"validatorOutstandingRewards\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct DecCoin[]\",\n        \"name\": \"rewards\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"startingHeight\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"endingHeight\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"validatorSlashes\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"validatorPeriod\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"fraction\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct ValidatorSlashEvent[]\",\n        \"name\": \"validatorSlashEvents\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"withdrawDelegatorReward\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin[]\",\n        \"name\": \"amount\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"withdrawValidatorCommission\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin[]\",\n        \"name\": \"amount\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]"
  },
  {
    "address": "0x0000000000000000000000000000000000001007",
    "name": "Epochs",
    "bytecode": "0x00",
    "compiler": "v0.8.20+commit.a1b79de6",
    "source": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Coin defines a token with a denomination and an amount.\n */\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n/**\n * @dev DecCoin defines a token with a denomination and a decimal amount.\n */\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev Dec defines decimal with a precision. for example, amount:16800, precision:3 means is 16.800\n */\nstruct Dec {\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev PageRequest is to be embedded in request messages for efficient pagination\n */\nstruct PageRequest {\n    // key is a value returned in PageResponse.next_key to begin\n    // querying the next page most efficiently. Only one of offset or key\n    // should be set.\n    bytes key;\n    // offset is a numeric offset that can be used when key is unavailable.\n    // It is less efficient than using key. Only one of offset or key should\n    // be set.\n    uint64 offset;\n    // limit is the total number of results to be returned in the result page.\n    // If left empty it will default to a value to be set by each app.\n    uint64 limit;\n    // countTotal is set to true to indicate that the result set should include\n    // a count of the total number of items available for pagination in UIs.\n    // count_total is only respected when offset is used. It is ignored when key\n    // is set.\n    bool countTotal;\n    // reverse is set to true if results are to be returned in the descending order.\n    bool reverse;\n}\n/**\n * @dev PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n */\nstruct PageResponse {\n    // nextKey is the key to be passed to PageRequest.key to\n    // query the next page most efficiently. It will be empty if\n    // there are no more results.\n    bytes nextKey;\n    // total is total number of results available if PageRequest.count_total\n    // was set, its value is undefined otherwise\n    uint64 total;\n}\n\n/**\n * @dev EpochInfo defines the message interface containing the relevant informations about\n * an epoch.\n */\nstruct EpochInfo {\n    // identifier of the epoch\n    string identifier;\n    // startTime of the epoch\n    int64 startTime;\n    // duration of the epoch\n    int64 duration;\n    // currentEpoch is the integer identifier of the epoch\n    int64 currentEpoch;\n    // currentEpochStartTime defines the timestamp of the start of the epoch\n    int64 currentEpochStartTime;\n    // epochCountingStarted reflects if the counting for the epoch has started\n    bool epochCountingStarted;\n    // currentEpochStartHeight of the epoch\n    int64 currentEpochStartHeight;\n}\n\ninterface IEpochs {\n    /**\n     * @dev epochInfos provide running epochInfos\n     */\n    function epochInfos(PageRequest memory pagination) external view returns (EpochInfo[] memory epochs, PageResponse memory pageResponse);\n\n    /**\n     * @dev currentEpoch provide current epoch of specified identifier\n     */\n    function currentEpoch(string memory identifier) external view returns (int64 currentEpoch);\n}\n",
    "abi": "[\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"identifier\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"currentEpoch\",\n    \"outputs\": [\n      {\n        \"internalType\": \"int64\",\n        \"name\": \"currentEpoch\",\n        \"type\": \"int64\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"epochInfos\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"identifier\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"startTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"duration\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"currentEpoch\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"currentEpochStartTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"epochCountingStarted\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"currentEpochStartHeight\",\n            \"type\": \"int64\"\n          }\n        ],\n        \"internalType\": \"struct EpochInfo[]\",\n        \"name\": \"epochs\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]"
  },
  {
    "address": "0x0000000000000000000000000000000000001006",
    "name": "Evidence",
    "bytecode": "0x00",
    "compiler": "v0.8.20+commit.a1b79de6",
    "source": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Coin defines a token with a denomination and an amount.\n */\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n/**\n * @dev DecCoin defines a token with a denomination and a decimal amount.\n */\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev Dec defines decimal with a precision. for example, amount:16800, precision:3 means is 16.800\n */\nstruct Dec {\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev PageRequest is to be embedded in request messages for efficient pagination\n */\nstruct PageRequest {\n    // key is a value returned in PageResponse.next_key to begin\n    // querying the next page most efficiently. Only one of offset or key\n    // should be set.\n    bytes key;\n    // offset is a numeric offset that can be used when key is unavailable.\n    // It is less efficient than using key. Only one of offset or key should\n    // be set.\n    uint64 offset;\n    // limit is the total number of results to be returned in the result page.\n    // If left empty it will default to a value to be set by each app.\n    uint64 limit;\n    // countTotal is set to true to indicate that the result set should include\n    // a count of the total number of items available for pagination in UIs.\n    // count_total is only respected when offset is used. It is ignored when key\n    // is set.\n    bool countTotal;\n    // reverse is set to true if results are to be returned in the descending order.\n    bool reverse;\n}\n/**\n * @dev PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n */\nstruct PageResponse {\n    // nextKey is the key to be passed to PageRequest.key to\n    // query the next page most efficiently. It will be empty if\n    // there are no more results.\n    bytes nextKey;\n    // total is total number of results available if PageRequest.count_total\n    // was set, its value is undefined otherwise\n    uint64 total;\n}\n\n/**\n * @dev Equivocation implements the Evidence interface and defines evidence of double\n * signing misbehavior.\n */\nstruct Equivocation {\n    int64 height;\n    int64 time;\n    int64 power;\n    address consensusAddress;\n    string evidenceHash;\n}\n\ninterface IEvidence {\n    /**\n     * @dev SubmitEvidence submits an arbitrary Evidence of misbehavior such as equivocation or\n     * counterfactual signing.\n     */\n    function submitEvidence(int64 height, int64 time, int64 power, address consensusAddress) external returns (string memory hash);\n\n    /**\n     * @dev evidence queries evidence based on evidence hash.\n     */\n    function evidence(string memory evidenceHash) external view returns (Equivocation memory evidence);\n\n    /**\n     * @dev allEvidence queries all evidence.\n     */\n    function allEvidence(PageRequest calldata pagination) external view returns (Equivocation[] memory evidence, PageResponse memory pageResponse);\n\n    /**\n     * @dev SubmitEvidence defines an event emitted when a submit evidence is submitted.\n     */\n    event SubmitEvidence(\n        address indexed submitter,\n        string  evidenceHash\n    );\n}\n",
    "abi": "[\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"submitter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"evidenceHash\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"SubmitEvidence\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"allEvidence\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"height\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"time\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"power\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"consensusAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"evidenceHash\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Equivocation[]\",\n        \"name\": \"evidence\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"evidenceHash\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"evidence\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"height\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"time\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"power\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"consensusAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"evidenceHash\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Equivocation\",\n        \"name\": \"evidence\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"int64\",\n        \"name\": \"height\",\n        \"type\": \"int64\"\n      },\n      {\n        \"internalType\": \"int64\",\n        \"name\": \"time\",\n        \"type\": \"int64\"\n      },\n      {\n        \"internalType\": \"int64\",\n        \"name\": \"power\",\n        \"type\": \"int64\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"consensusAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"submitEvidence\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"hash\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]"
  },
  {
    "address": "0x0000000000000000000000000000000000001002",
    "name": "Gov",
    "bytecode": "0x00",
    "compiler": "v0.8.20+commit.a1b79de6",
    "source": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Coin defines a token with a denomination and an amount.\n */\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n/**\n * @dev DecCoin defines a token with a denomination and a decimal amount.\n */\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev Dec defines decimal with a precision. for example, amount:16800, precision:3 means is 16.800\n */\nstruct Dec {\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev PageRequest is to be embedded in request messages for efficient pagination\n */\nstruct PageRequest {\n    // key is a value returned in PageResponse.next_key to begin\n    // querying the next page most efficiently. Only one of offset or key\n    // should be set.\n    bytes key;\n    // offset is a numeric offset that can be used when key is unavailable.\n    // It is less efficient than using key. Only one of offset or key should\n    // be set.\n    uint64 offset;\n    // limit is the total number of results to be returned in the result page.\n    // If left empty it will default to a value to be set by each app.\n    uint64 limit;\n    // countTotal is set to true to indicate that the result set should include\n    // a count of the total number of items available for pagination in UIs.\n    // count_total is only respected when offset is used. It is ignored when key\n    // is set.\n    bool countTotal;\n    // reverse is set to true if results are to be returned in the descending order.\n    bool reverse;\n}\n/**\n * @dev PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n */\nstruct PageResponse {\n    // nextKey is the key to be passed to PageRequest.key to\n    // query the next page most efficiently. It will be empty if\n    // there are no more results.\n    bytes nextKey;\n    // total is total number of results available if PageRequest.count_total\n    // was set, its value is undefined otherwise\n    uint64 total;\n}\n\n/**\n * @dev ProposalStatus enumerates the valid statuses of a proposal.\n */\nenum ProposalStatus {\n    // Unspecified defines the default proposal status.\n    Unspecified,\n    // DepositPeriod defines a proposal status during the deposit.\n    DepositPeriod,\n    // VotingPeriod defines a proposal status during the voting.\n    VotingPeriod,\n    // Passed defines a proposal status of a proposal that has passed.\n    Passed,\n    // Rejected defines a proposal status of a proposal that has been rejected.\n    Rejected,\n    // Failed defines a proposal status of a proposal that has failed.\n    Failed\n}\n\n/**\n * @dev VoteOption enumerates the valid vote options for a given governance proposal.\n */\nenum VoteOption {\n    // Unspecified defines a no-op vote option.\n    Unspecified,\n    // Yes defines a yes vote option.\n    Yes,\n    // Abstain defines an abstain vote option.\n    Abstain,\n    // No defines a no vote option.\n    No,\n    // NoWithWeto defines a no with veto vote option.\n    NoWithWeto\n}\n\n/**\n * @dev TallyResult defines a standard tally for a governance proposal.\n */\nstruct TallyResult {\n    string yesCount;\n    string abstainCount;\n    string noCount;\n    string noWithVetoCount;\n}\n\n/**\n * @dev Proposal defines the core field members of a governance proposal.\n */\nstruct Proposal {\n    uint64 id;\n    string[] messages;\n    ProposalStatus status;\n    // final_tally_result is the final tally result of the proposal. When\n    // querying a proposal, this field is not populated until the\n    // proposal's voting period has ended.\n    TallyResult finalTallyResult;\n    int64 submitTime;\n    int64 depositEndTime;\n    Coin[] totalDeposit;\n    int64 votingStartTime;\n    int64 votingEndTime;\n    string metadata;\n}\n\n/**\n * @dev WeightedVoteOption defines a unit of vote for vote split.\n */\nstruct WeightedVoteOption {\n    VoteOption option;\n    string weight;\n}\n\n/**\n * @dev VoteData defines a vote on a governance proposal.\n * A VoteData consists of a proposal ID, the voter, and the vote option.\n */\nstruct VoteData {\n    uint64 proposalId;\n    address voter;\n    WeightedVoteOption[] options;\n    string metadata;\n}\n\n/**\n * @dev DepositData defines an amount deposited by an account address to an active\n * proposal.\n */\nstruct DepositData {\n    uint64 proposalId;\n    address depositor;\n    Coin[] amount;\n}\n\n/**\n * @dev Params defines the parameters for the gov module.\n */\nstruct Params {\n    Coin[] minDeposit;\n    int64 maxDepositPeriod;\n    int64 votingPeriod;\n    string quorum;\n    string threshold;\n    string vetoThreshold;\n}\n\ninterface IGov {\n    /**\n     * @dev legacySubmitProposal defines a method to create new proposal given a content for v1beat1.\n     */\n    function legacySubmitProposal(\n        string memory title,\n        string memory description,\n        Coin[] memory initialDeposit\n    ) external returns (uint64 proposalId);\n\n    /**\n     * @dev submitProposal defines a method to create new proposal given a content for v1.\n     */\n    function submitProposal(\n        string memory messages,\n        Coin[] memory initialDeposit,\n        string memory metadata\n    ) external returns (uint64 proposalId);\n\n    /**\n     * @dev vote defines a method to add a vote on a specific proposal.\n     */\n    function vote(\n        uint64 proposalId,\n        VoteOption option,\n        string memory metadata\n    ) external returns (bool success);\n\n    /**\n     * @dev voteWeighted defines a method to add a weighted vote on a specific proposal.\n     */\n    function voteWeighted(\n        uint64 proposalId,\n        WeightedVoteOption[] memory options,\n        string memory metadata\n    ) external returns (bool success);\n\n    /**\n     * @dev deposit defines a method to add deposit on a specific proposal.\n     */\n    function deposit(\n        uint64 proposalId,\n        uint256 amount\n    ) external returns (bool success);\n\n    /**\n     * @dev proposal queries proposal details based on ProposalID.\n     */\n    function proposal(\n        uint64 proposalId\n    ) external view returns (Proposal calldata proposal);\n\n    /**\n     * @dev proposals queries all proposals based on given status.\n     */\n    function proposals(\n        ProposalStatus status,\n        address voter,\n        address depositor,\n        PageRequest calldata pagination\n    ) external view returns (Proposal[] calldata proposals, PageResponse calldata pageResponse);\n\n    /**\n     * @dev vote queries voted information based on proposalID, voterAddr.\n     */\n    function vote(\n        uint64 proposalId,\n        address voter\n    ) external view returns (VoteData calldata vote);\n\n    /**\n     * @dev votes queries votes of a given proposal.\n     */\n    function votes(\n        uint64 proposalId,\n        PageRequest calldata pagination\n    ) external view returns (VoteData[] calldata votes, PageResponse calldata pageResponse);\n\n    /**\n     * @dev deposit queries single deposit information based proposalID, depositAddr.\n     */\n    function deposit(\n        uint64 proposalId,\n        address depositor\n    ) external view returns (DepositData calldata deposit);\n\n    /**\n     * @dev deposits queries all deposits of a single proposal.\n     */\n    function deposits(\n        uint64 proposalId,\n        PageRequest calldata pagination\n    ) external view returns (DepositData[] calldata deposits, PageResponse calldata pageResponse);\n\n    /**\n     * @dev params queries the gov params.\n     */\n    function params() external view returns (Params calldata params);\n\n    /**\n     * @dev tallyResult queries the tally of a proposal vote.\n     */\n    function tallyResult(\n        uint64 proposalId\n    ) external view returns (TallyResult calldata tallyResult);\n\n    /**\n     * @dev LegacySubmitProposal defines an Event emitted when a legacy proposal submited.\n     */\n    event LegacySubmitProposal(\n        address indexed proposer,\n        uint64 proposalId\n    );\n\n    /**\n     * @dev SubmitProposal defines an Event emitted when a proposal submited.\n     */\n    event SubmitProposal(\n        address indexed proposer,\n        uint64 proposalId\n    );\n\n    /**\n     * @dev Vote defines an Event emitted when a proposal voted.\n     */\n    event Vote(\n        address indexed voter,\n        uint64 proposalId,\n        uint8 option\n    );\n\n    /**\n     * @dev Vote defines an Event emitted when a proposal vote weighted.\n     */\n    event VoteWeighted(\n        address indexed voter,\n        uint64 proposalId\n    );\n\n    /**\n     * @dev Vote defines an Event emitted when a proposal doposited by a depositor.\n     */\n    event Deposit(\n        address indexed depositor,\n        uint64 proposalId\n    );\n}\n",
    "abi": "[\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"depositor\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"name\": \"Deposit\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"proposer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"name\": \"LegacySubmitProposal\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"proposer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"name\": \"SubmitProposal\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint8\",\n        \"name\": \"option\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"name\": \"Vote\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"name\": \"VoteWeighted\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"depositor\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"deposit\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"proposalId\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"depositor\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin[]\",\n            \"name\": \"amount\",\n            \"type\": \"tuple[]\"\n          }\n        ],\n        \"internalType\": \"struct DepositData\",\n        \"name\": \"deposit\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"deposit\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"deposits\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"proposalId\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"depositor\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin[]\",\n            \"name\": \"amount\",\n            \"type\": \"tuple[]\"\n          }\n        ],\n        \"internalType\": \"struct DepositData[]\",\n        \"name\": \"deposits\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"title\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"description\",\n        \"type\": \"string\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin[]\",\n        \"name\": \"initialDeposit\",\n        \"type\": \"tuple[]\"\n      }\n    ],\n    \"name\": \"legacySubmitProposal\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"params\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin[]\",\n            \"name\": \"minDeposit\",\n            \"type\": \"tuple[]\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"maxDepositPeriod\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"votingPeriod\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"quorum\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"threshold\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"vetoThreshold\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Params\",\n        \"name\": \"params\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"name\": \"proposal\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"id\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"string[]\",\n            \"name\": \"messages\",\n            \"type\": \"string[]\"\n          },\n          {\n            \"internalType\": \"enum ProposalStatus\",\n            \"name\": \"status\",\n            \"type\": \"uint8\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"yesCount\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"abstainCount\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"noCount\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"noWithVetoCount\",\n                \"type\": \"string\"\n              }\n            ],\n            \"internalType\": \"struct TallyResult\",\n            \"name\": \"finalTallyResult\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"submitTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"depositEndTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin[]\",\n            \"name\": \"totalDeposit\",\n            \"type\": \"tuple[]\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"votingStartTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"votingEndTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"metadata\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Proposal\",\n        \"name\": \"proposal\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"enum ProposalStatus\",\n        \"name\": \"status\",\n        \"type\": \"uint8\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"depositor\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"proposals\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"id\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"string[]\",\n            \"name\": \"messages\",\n            \"type\": \"string[]\"\n          },\n          {\n            \"internalType\": \"enum ProposalStatus\",\n            \"name\": \"status\",\n            \"type\": \"uint8\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"yesCount\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"abstainCount\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"noCount\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"noWithVetoCount\",\n                \"type\": \"string\"\n              }\n            ],\n            \"internalType\": \"struct TallyResult\",\n            \"name\": \"finalTallyResult\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"submitTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"depositEndTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin[]\",\n            \"name\": \"totalDeposit\",\n            \"type\": \"tuple[]\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"votingStartTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"votingEndTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"metadata\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Proposal[]\",\n        \"name\": \"proposals\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"messages\",\n        \"type\": \"string\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Coin[]\",\n        \"name\": \"initialDeposit\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"metadata\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"submitProposal\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"name\": \"tallyResult\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"yesCount\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"abstainCount\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"noCount\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"noWithVetoCount\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct TallyResult\",\n        \"name\": \"tallyResult\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"enum VoteOption\",\n        \"name\": \"option\",\n        \"type\": \"uint8\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"metadata\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"vote\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"vote\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"proposalId\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"voter\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"enum VoteOption\",\n                \"name\": \"option\",\n                \"type\": \"uint8\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"weight\",\n                \"type\": \"string\"\n              }\n            ],\n            \"internalType\": \"struct WeightedVoteOption[]\",\n            \"name\": \"options\",\n            \"type\": \"tuple[]\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"metadata\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct VoteData\",\n        \"name\": \"vote\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"enum VoteOption\",\n            \"name\": \"option\",\n            \"type\": \"uint8\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"weight\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct WeightedVoteOption[]\",\n        \"name\": \"options\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"metadata\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"voteWeighted\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"proposalId\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"votes\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"proposalId\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"voter\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"enum VoteOption\",\n                \"name\": \"option\",\n                \"type\": \"uint8\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"weight\",\n                \"type\": \"string\"\n              }\n            ],\n            \"internalType\": \"struct WeightedVoteOption[]\",\n            \"name\": \"options\",\n            \"type\": \"tuple[]\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"metadata\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct VoteData[]\",\n        \"name\": \"votes\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]"
  },
  {
    "address": "0x0000000000000000000000000000000000001008",
    "name": "Inflation",
    "bytecode": "0x00",
    "compiler": "v0.8.20+commit.a1b79de6",
    "source": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Coin defines a token with a denomination and an amount.\n */\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n/**\n * @dev DecCoin defines a token with a denomination and a decimal amount.\n */\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev Dec defines decimal with a precision. for example, amount:16800, precision:3 means is 16.800\n */\nstruct Dec {\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev PageRequest is to be embedded in request messages for efficient pagination\n */\nstruct PageRequest {\n    // key is a value returned in PageResponse.next_key to begin\n    // querying the next page most efficiently. Only one of offset or key\n    // should be set.\n    bytes key;\n    // offset is a numeric offset that can be used when key is unavailable.\n    // It is less efficient than using key. Only one of offset or key should\n    // be set.\n    uint64 offset;\n    // limit is the total number of results to be returned in the result page.\n    // If left empty it will default to a value to be set by each app.\n    uint64 limit;\n    // countTotal is set to true to indicate that the result set should include\n    // a count of the total number of items available for pagination in UIs.\n    // count_total is only respected when offset is used. It is ignored when key\n    // is set.\n    bool countTotal;\n    // reverse is set to true if results are to be returned in the descending order.\n    bool reverse;\n}\n/**\n * @dev PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n */\nstruct PageResponse {\n    // nextKey is the key to be passed to PageRequest.key to\n    // query the next page most efficiently. It will be empty if\n    // there are no more results.\n    bytes nextKey;\n    // total is total number of results available if PageRequest.count_total\n    // was set, its value is undefined otherwise\n    uint64 total;\n}\n\n/// @dev The IInflation contract's address.\naddress constant INFLATION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000001008;\n\n/// @dev The IInflation contract's instance.\nIInflation constant INFLATION_CONTRACT = IInflation(INFLATION_PRECOMPILE_ADDRESS);\n\n/**\n * @dev Params defines the parameters for the auth module.\n */\nstruct Params {\n    string mintDenom;\n    Dec stakingRewards;\n    Dec communityPool;\n    bool enableInflation;\n    Dec inflationRateChange;\n    Dec inflationMax;\n    Dec inflationMin;\n    Dec goalBonded;\n}\n\ninterface IInflation {\n    /**\n     * @dev period retrieves current period.\n     */\n    function period() external view returns (uint64 period);\n\n    /**\n     * @dev epochMintProvision retrieves current minting epoch provision value.\n     */\n    function epochMintProvision() external view returns (DecCoin memory epochMintProvision);\n\n    /**\n     * @dev skippedEpochs retrieves the total number of skipped epochs.\n     */\n    function skippedEpochs() external view returns (uint64 skippedEpochs);\n\n    /**\n     * @dev circulatingSupply retrieves the total number of tokens that are in circulation (i.e. excluding unvested tokens).\n     */\n    function circulatingSupply() external view returns (DecCoin memory circulatingSupply);\n\n    /**\n     * @dev inflationRate retrieves the inflation rate of the current period.\n     */\n    function inflationRate() external view returns (Dec memory inflationRate);\n\n    /**\n     * @dev params queries the parameters of x/inflation module.\n     */\n    function params() external view returns (Params memory params);\n}\n",
    "abi": "[\n  {\n    \"inputs\": [],\n    \"name\": \"circulatingSupply\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct DecCoin\",\n        \"name\": \"circulatingSupply\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"epochMintProvision\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"denom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct DecCoin\",\n        \"name\": \"epochMintProvision\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"inflationRate\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint8\",\n            \"name\": \"precision\",\n            \"type\": \"uint8\"\n          }\n        ],\n        \"internalType\": \"struct Dec\",\n        \"name\": \"inflationRate\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"params\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"mintDenom\",\n            \"type\": \"string\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8\",\n                \"name\": \"precision\",\n                \"type\": \"uint8\"\n              }\n            ],\n            \"internalType\": \"struct Dec\",\n            \"name\": \"stakingRewards\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8\",\n                \"name\": \"precision\",\n                \"type\": \"uint8\"\n              }\n            ],\n            \"internalType\": \"struct Dec\",\n            \"name\": \"communityPool\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"enableInflation\",\n            \"type\": \"bool\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8\",\n                \"name\": \"precision\",\n                \"type\": \"uint8\"\n              }\n            ],\n            \"internalType\": \"struct Dec\",\n            \"name\": \"inflationRateChange\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8\",\n                \"name\": \"precision\",\n                \"type\": \"uint8\"\n              }\n            ],\n            \"internalType\": \"struct Dec\",\n            \"name\": \"inflationMax\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8\",\n                \"name\": \"precision\",\n                \"type\": \"uint8\"\n              }\n            ],\n            \"internalType\": \"struct Dec\",\n            \"name\": \"inflationMin\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint8\",\n                \"name\": \"precision\",\n                \"type\": \"uint8\"\n              }\n            ],\n            \"internalType\": \"struct Dec\",\n            \"name\": \"goalBonded\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct Params\",\n        \"name\": \"params\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"period\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"period\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"skippedEpochs\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"skippedEpochs\",\n        \"type\": \"uint64\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]"
  },
  {
    "address": "0x0000000000000000000000000000000000001005",
    "name": "Slashing",
    "bytecode": "0x00",
    "compiler": "v0.8.20+commit.a1b79de6",
    "source": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Coin defines a token with a denomination and an amount.\n */\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n/**\n * @dev DecCoin defines a token with a denomination and a decimal amount.\n */\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev Dec defines decimal with a precision. for example, amount:16800, precision:3 means is 16.800\n */\nstruct Dec {\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev PageRequest is to be embedded in request messages for efficient pagination\n */\nstruct PageRequest {\n    // key is a value returned in PageResponse.next_key to begin\n    // querying the next page most efficiently. Only one of offset or key\n    // should be set.\n    bytes key;\n    // offset is a numeric offset that can be used when key is unavailable.\n    // It is less efficient than using key. Only one of offset or key should\n    // be set.\n    uint64 offset;\n    // limit is the total number of results to be returned in the result page.\n    // If left empty it will default to a value to be set by each app.\n    uint64 limit;\n    // countTotal is set to true to indicate that the result set should include\n    // a count of the total number of items available for pagination in UIs.\n    // count_total is only respected when offset is used. It is ignored when key\n    // is set.\n    bool countTotal;\n    // reverse is set to true if results are to be returned in the descending order.\n    bool reverse;\n}\n/**\n * @dev PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n */\nstruct PageResponse {\n    // nextKey is the key to be passed to PageRequest.key to\n    // query the next page most efficiently. It will be empty if\n    // there are no more results.\n    bytes nextKey;\n    // total is total number of results available if PageRequest.count_total\n    // was set, its value is undefined otherwise\n    uint64 total;\n}\n\n/**\n * @dev Params represents the parameters used for by the slashing module.\n */\nstruct Params {\n    int64 signedBlocksWindow;\n    string minSignedPerWindow;\n    int64 downtimeJailDuration;\n    string slashFractionDoubleSign;\n    string slashFractionDowntime;\n}\n\n/**\n * @dev ValidatorSigningInfo defines a validator's signing info for monitoring their\n * liveness activity.\n */\nstruct ValidatorSigningInfo {\n    address consAddress;\n    // Height at which validator was first a candidate OR was unjailed\n    int64 startHeight;\n    // Index which is incremented each time the validator was a bonded\n    // in a block and may have signed a precommit or not. This in conjunction with the\n    // `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.\n    int64 indexOffset;\n    // Timestamp until which the validator is jailed due to liveness downtime.\n    int64 jailedUntil;\n    // Whether or not a validator has been tombstoned (killed out of validator set). It is set\n    // once the validator commits an equivocation or for any other configured misbehiavor.\n    bool tombstoned;\n    // A counter kept to avoid unnecessary array reads.\n    // Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.\n    int64 missedBlocksCounter;\n}\n\ninterface ISlashing {\n    /**\n     * @dev unjail defines a method for unjailing a jailed validator, thus returning\n     * them into the bonded validator set, so they can begin receiving provisions\n     * and rewards again.\n     */\n    function unjail() external returns (bool success);\n\n    /**\n     * @dev Params queries the parameters of slashing module\n     */\n    function params() external view returns (Params memory params);\n\n    /**\n     * @dev signingInfo queries the signing info of given cons address\n     */\n    function signingInfo(address consAddress) external view returns (ValidatorSigningInfo memory valSigningInfo);\n\n    /**\n     * @dev signingInfos queries signing info of all validators\n     */\n    function signingInfos(PageRequest calldata pagination) external view returns (ValidatorSigningInfo[] memory infos, PageResponse memory pageResponse);\n\n    /**\n     * @dev Unjail defines an Event emitted when a validtor unjail\n     */\n    event Unjail(\n        address indexed validator\n    );\n}\n",
    "abi": "[\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"validator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Unjail\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"params\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"signedBlocksWindow\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"minSignedPerWindow\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"downtimeJailDuration\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"slashFractionDoubleSign\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"slashFractionDowntime\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Params\",\n        \"name\": \"params\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"consAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"signingInfo\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"consAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"startHeight\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"indexOffset\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"jailedUntil\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"tombstoned\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"missedBlocksCounter\",\n            \"type\": \"int64\"\n          }\n        ],\n        \"internalType\": \"struct ValidatorSigningInfo\",\n        \"name\": \"valSigningInfo\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"signingInfos\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"consAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"startHeight\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"indexOffset\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"jailedUntil\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"tombstoned\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"missedBlocksCounter\",\n            \"type\": \"int64\"\n          }\n        ],\n        \"internalType\": \"struct ValidatorSigningInfo[]\",\n        \"name\": \"infos\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"unjail\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]"
  },
  {
    "address": "0x0000000000000000000000000000000000001003",
    "name": "Staking",
    "bytecode": "0x00",
    "compiler": "v0.8.20+commit.a1b79de6",
    "source": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Coin defines a token with a denomination and an amount.\n */\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n/**\n * @dev DecCoin defines a token with a denomination and a decimal amount.\n */\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev Dec defines decimal with a precision. for example, amount:16800, precision:3 means is 16.800\n */\nstruct Dec {\n    uint256 amount;\n    uint8 precision;\n}\n/**\n * @dev PageRequest is to be embedded in request messages for efficient pagination\n */\nstruct PageRequest {\n    // key is a value returned in PageResponse.next_key to begin\n    // querying the next page most efficiently. Only one of offset or key\n    // should be set.\n    bytes key;\n    // offset is a numeric offset that can be used when key is unavailable.\n    // It is less efficient than using key. Only one of offset or key should\n    // be set.\n    uint64 offset;\n    // limit is the total number of results to be returned in the result page.\n    // If left empty it will default to a value to be set by each app.\n    uint64 limit;\n    // countTotal is set to true to indicate that the result set should include\n    // a count of the total number of items available for pagination in UIs.\n    // count_total is only respected when offset is used. It is ignored when key\n    // is set.\n    bool countTotal;\n    // reverse is set to true if results are to be returned in the descending order.\n    bool reverse;\n}\n/**\n * @dev PageResponse is to be embedded in gRPC response messages where the\n * corresponding request message has used PageRequest.\n */\nstruct PageResponse {\n    // nextKey is the key to be passed to PageRequest.key to\n    // query the next page most efficiently. It will be empty if\n    // there are no more results.\n    bytes nextKey;\n    // total is total number of results available if PageRequest.count_total\n    // was set, its value is undefined otherwise\n    uint64 total;\n}\n\n/**\n * @dev Description defines a validator description.\n */\nstruct Description {\n    // moniker defines a human-readable name for the validator.\n    string moniker;\n    // identity defines an optional identity signature (ex. UPort or Keybase).\n    string identity;\n    // website defines an optional website link.\n    string website;\n    // securityContact defines an optional email for security contact.\n    string securityContact;\n    // details define other optional details.\n    string details;\n}\n\n/**\n * @dev CommissionRates defines the initial commission rates to be used for creating a validator.\n */\nstruct CommissionRates {\n    // rate defines the maximum commission rate which validator can ever charge, as a fraction.\n    uint256 rate;\n    // maxRate defines the maximum commission rate which validator can ever charge, as a fraction.\n    uint256 maxRate;\n    // maxChangeRate defines the maximum daily increase of the validator commission, as a fraction.\n    uint256 maxChangeRate;\n}\n\n/**\n * @dev Commission defines commission parameters for a given validator.\n */\nstruct Commission {\n    // commissionRates defines the initial commission rates to be used for creating a validator\n    CommissionRates commissionRates;\n    // updateTime defines the validator update commissionRates time\n    int64 updateTime;\n}\n\n/**\n * @dev BondStatus is the status of a validator.\n */\nenum BondStatus {\n    // Unspecified defines an invalid validator status.\n    Unspecified,\n    // Unbonded defines a validator that is not bonded.\n    Unbonded,\n    // Unbonding defines a validator that is unbonding.\n    Unbonding,\n    // Bonded defines a validator that is bonded.\n    Bonded\n}\n\n/**\n * @dev Validator defines a validator, together with the total amount of the\n * Validator's bond shares and their exchange rate to coins. Slashing results in\n * a decrease in the exchange rate, allowing correct calculation of future\n * undelegations without iterating over delegators. When coins are delegated to\n * this validator, the validator is credited with a delegation whose number of\n * bond shares is based on the amount of coins delegated divided by the current\n * exchange rate. Voting power can be calculated as total bonded shares\n * multiplied by exchange rate.\n */\nstruct Validator {\n    // operatorAddress defines the address of the validator's operator\n    address operatorAddress;\n    // consensusPubkey is the consensus public key of the validator\n    string consensusPubkey;\n    // jailed defined whether the validator has been jailed from bonded status or not.\n    bool jailed;\n    // status is the validator status (bonded/unbonding/unbonded).\n    BondStatus status;\n    // tokens define the delegated tokens (incl. self-delegation).\n    uint256 tokens;\n    // delegatorShares defines total shares issued to a validator's delegators.\n    uint256 delegatorShares;\n    // description defines the description terms for the validator.\n    Description description;\n    // unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.\n    int64 unbondingHeight;\n    // unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.\n    int64 unbondingTime;\n    // commission defines the commission parameters.\n    Commission commission;\n    // minSelfDelegation is the validator's self declared minimum self delegation.\n    uint256 minSelfDelegation;\n}\n\n/**\n * @dev Delegation represents the bond with tokens held by an account. It is\n * owned by one delegator, and is associated with the voting power of one\n * validator.\n */\nstruct Delegation {\n    // delegatorAddress is the address of the delegator.\n    address delegatorAddress;\n    // validatorAddress is the address of the validator.\n    address validatorAddress;\n    // shares define the delegation shares received.\n    Dec shares;\n}\n\n/**\n * @dev DelegationResponse is equivalent to Delegation except that it contains a\n * balance in addition to shares which is more suitable for client responses.\n */\nstruct DelegationResponse {\n    Delegation delegation;\n    Coin balance;\n}\n\n/**\n * @dev UnbondingDelegationEntry defines an unbonding object with relevant metadata.\n */\nstruct UnbondingDelegationEntry {\n    // creationHeight is the height which the unbonding took place.\n    int64 creationHeight;\n    // completionTime is the unix time for unbonding completion.\n    int64 completionTime;\n    // initialBalance defines the tokens initially scheduled to receive at completion.\n    uint256 initialBalance;\n    // balance defines the tokens to receive at completion.\n    uint256 balance;\n}\n\n/**\n * @dev RedelegationEntry defines a redelegation object with relevant metadata.\n */\nstruct RedelegationEntry {\n    // creationHeight defines the height which the redelegation took place.\n    int64 creationHeight;\n    // completionTime defines the unix time for redelegation completion.\n    int64 completionTime;\n    // initialBalance defines the initial balance when redelegation started.\n    uint256 initialBalance;\n    // shareDst is the amount of destination-validator shares created by redelegation.\n    uint256 shareDst;\n}\n\n/**\n * @dev RedelegationEntryResponse is equivalent to a RedelegationEntry except that it\n * contains a balance in addition to shares which is more suitable for client responses.\n */\nstruct RedelegationEntryResponse {\n    RedelegationEntry redelegationEntry;\n    uint256 balance;\n}\n\n/**\n * @dev UnbondingDelegation stores all of a single delegator's unbonding bonds\n * for a single validator in an time-ordered list.\n */\nstruct UnbondingDelegation {\n    address delegatorAddress;\n    address validatorAddress;\n    UnbondingDelegationEntry[] entries;\n}\n\n/**\n * @dev RedelegationResponse is equivalent to a Redelegation except that its entries\n * contain a balance in addition to shares which is more suitable for client responses.\n */\nstruct RedelegationResponse {\n    Redelegation redelegation;\n    RedelegationEntryResponse[] entries;\n}\n\n/**\n * @dev Redelegation contains the list of a particular delegator's redelegating bonds\n * from a particular source validator to a particular destination validator.\n */\nstruct Redelegation {\n    // delegatorAddress is the bech32-encoded address of the delegator.\n    address delegatorAddress;\n    // validatorSrcAddress is the validator redelegation source operator address.\n    address validatorSrcAddress;\n    // validatorDstAddress is the validator redelegation destination operator address.\n    address validatorDstAddress;\n    // entries are the redelegation entries.\n    RedelegationEntry[] entries;\n}\n\n/**\n * @dev HistoricalInfo contains header and validator information for a given block.\n * It is stored as part of staking module's state, which persists the `n` most\n * recent HistoricalInfo\n * (`n` is set by the staking module's `historical_entries` parameter).\n */\nstruct HistoricalInfo {\n    Header header;\n    Validator[] valset;\n}\n\n/**\n * @dev Pool is used for tracking bonded and not-bonded token supply of the bond\n * denomination.\n */\nstruct Pool {\n    uint256 notBondedTokens;\n    uint256 bondedTokens;\n}\n\n/**\n * @dev Params defines the parameters for the staking module.\n */\nstruct Params {\n    // unbondingTime is the time duration of unbonding.\n    int64 unbondingTime;\n    // maxValidators is the maximum number of validators.\n    uint32 maxValidators;\n    // maxEntries is the max entries for either unbonding delegation or redelegation (per pair/trio).\n    uint32 maxEntries;\n    // historicalEntries is the number of historical entries to persist.\n    uint32 historicalEntries;\n    // bondDenom defines the bondable coin denomination.\n    string bondDenom;\n    // min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators\n    uint256 minCommissionRate;\n}\n\n/**\n * @dev Header defines the structure of a Tendermint block header.\n */\nstruct Header {\n    // basic block info\n    Consensus version;\n    string chainId;\n    int64 height;\n    int64 time;\n\n    // prev block info\n    BlockID lastBlockId;\n\n    // hashes of block data\n    string lastCommitHash;     // commit from validators from the last block\n    string dataHash;           // transactions\n\n    // hashes from the app output from the prev block\n    string validatorsHash;     // validators for the current block\n    string nextValidatorsHash; // validators for the next block\n    string consensusHash;      // consensus params for current block\n    string appHash;            // state after txs from the previous block\n    string lastResultsHash;    // root hash of all results from the txs from the previous block\n\n    // consensus info\n    string evidenceHash;       // evidence included in the block\n    string proposerAddress;    // original proposer of the block\n}\n\n/**\n * @dev Consensus captures the consensus rules for processing a block in the blockchain,\n * including all blockchain data structures and the rules of the application's\n * state transition machine.\n */\nstruct Consensus {\n    uint64 block;\n    uint64 app;\n}\n\n/**\n * @dev BlockID\n */\nstruct BlockID {\n    string hash;\n    PartSetHeader partSetHeader;\n}\n\n/**\n * @dev PartsetHeader\n */\nstruct PartSetHeader {\n    uint32 total;\n    string hash;\n}\n\ninterface IStaking {\n    /**\n     * @dev createValidator defines a method for creating a new validator.\n     */\n    function createValidator(\n        Description calldata description,\n        CommissionRates calldata commission,\n        uint256 minSelfDelegation,\n        string calldata pubkey,\n        uint256 value\n    ) external returns (bool success);\n\n    /**\n     * @dev editValidator defines a method for editing an existing validator.\n     */\n    function editValidator(\n        Description calldata description,\n        int256 commissionRate,\n        int256 minSelfDelegation\n    ) external returns (bool success);\n\n    /**\n     * @dev delegate defines a method for performing a delegation of coins\n     * from a delegator to a validator.\n     */\n    function delegate(\n        address validatorAddress,\n        uint256 amount\n    ) external returns (bool success);\n\n    /**\n     * @dev undelegate defines a method for performing an undelegation from a\n     * delegate and a validator.\n     */\n    function undelegate(\n        address validatorAddress,\n        uint256 amount\n    ) external returns (uint256 completionTime);\n\n    /**\n     * @dev redelegate defines a method for performing a redelegation\n     * of coins from a delegator and source validator to a destination validator.\n     */\n    function redelegate(\n        address validatorSrcAddress,\n        address validatorDstAddress,\n        uint256 amount\n    ) external returns (uint256 completionTime);\n\n    /**\n     * @dev cancelUnbondingDelegation defines a method for performing canceling the unbonding delegation\n     * and delegate back to previous validator.\n     */\n    function cancelUnbondingDelegation(\n        address validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    ) external returns (bool success);\n\n    /**\n     * @dev validators queries all validators that match the given status.\n     */\n    function validators(\n        BondStatus status,\n        PageRequest calldata pagination\n    ) external view returns (Validator[] calldata validators, PageResponse calldata pageResponse);\n\n    /**\n     * @dev validator queries validator info for given validator address.\n     */\n    function validator(\n        address validatorAddr\n    ) external view returns (Validator calldata validator);\n\n    /**\n     * @dev validatorDelegations queries delegate info for given validator.\n     */\n    function validatorDelegations(\n        address validatorAddr,\n        PageRequest calldata pagination\n    ) external view returns (DelegationResponse[] calldata response, PageResponse calldata pageResponse);\n\n    /**\n     * @dev validatorUnbondingDelegations queries unbonding delegations of a validator.\n     */\n    function validatorUnbondingDelegations(\n        address validatorAddr,\n        PageRequest calldata pagination\n    ) external view returns (UnbondingDelegation[] calldata response, PageResponse calldata pageResponse);\n\n    /**\n     * @dev delegation queries delegate info for given validator delegator pair.\n     */\n    function delegation(\n        address delegatorAddr,\n        address validatorAddr\n    ) external view returns (DelegationResponse calldata response);\n\n    /**\n     * @dev unbondingDelegation queries unbonding info for given validator delegator pair.\n     */\n    function unbondingDelegation(\n        address delegatorAddr,\n        address validatorAddr\n    ) external view returns (UnbondingDelegation calldata response);\n\n    /**\n     * @dev delegatorDelegations queries all delegations of a given delegator address.\n     */\n    function delegatorDelegations(\n        address delegatorAddr,\n        PageRequest calldata pagination\n    ) external view returns (DelegationResponse[] calldata response, PageResponse calldata pageResponse);\n\n    /**\n     * @dev delegatorUnbondingDelegations queries all unbonding delegations of a given delegator address.\n     */\n    function delegatorUnbondingDelegations(\n        address delegatorAddr,\n        PageRequest calldata pagination\n    ) external view returns (UnbondingDelegation[] calldata response, PageResponse calldata pageResponse);\n\n    /**\n     * @dev redelegations queries redelegations of given address.\n     */\n    function redelegations(\n        address delegatorAddr,\n        address srcValidatorAddr,\n        address dstValidatorAddr,\n        PageRequest calldata pagination\n    ) external view returns (RedelegationResponse[] calldata redelegationResponses, PageResponse calldata pageResponse);\n\n    /**\n     * @dev delegatorValidators queries all validators info for given delegator address.\n     */\n    function delegatorValidators(\n        address delegatorAddr,\n        PageRequest calldata pagination\n    ) external view returns (Validator[] calldata validators, PageResponse calldata pageResponse);\n\n    /**\n     * @dev delegatorValidator queries validator info for given delegator validator pair.\n     */\n    function delegatorValidator(\n        address delegatorAddr,\n        address validatorAddr\n    ) external view returns (Validator calldata validator);\n\n    /**\n     * @dev historicalInfo queries the historical info for given height.\n     */\n    function historicalInfo(\n        int64 height\n    ) external view returns (HistoricalInfo calldata historicalInfo);\n\n    /**\n     * @dev pool queries the pool info.\n     */\n    function pool() external view returns (Pool calldata pool);\n\n    /**\n     * @dev params queries the staking params.\n     */\n    function params() external view returns (Params calldata params);\n\n    /**\n     * @dev CreateValidator defines an Event emitted when a new validator created.\n     */\n    event CreateValidator(\n        address indexed validator,\n        uint256 value\n    );\n\n    /**\n     * @dev EditValidator defines an Event emitted when a validator edited.\n     */\n    event EditValidator(\n        address indexed validator,\n        int256 commissionRate,\n        int256 minSelfDelegation\n    );\n\n    /**\n     * @dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\n     * delegator address to the validator address.\n     */\n    event Delegate(\n        address indexed delegator,\n        address indexed validator,\n        uint256 amount\n    );\n\n    /**\n     * @dev Undelegate defines an Event emitted when a given amount of tokens are undelegate by delegator\n     */\n    event Undelegate(\n        address indexed delegatorAddress,\n        address indexed validatorAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /**\n     * @dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\n     * the source validator address to the destination validator address.\n     */\n    event Redelegate(\n        address indexed delegatorAddress,\n        address indexed validatorSrcAddress,\n        address indexed validatorDstAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /**\n     * @dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens are cancel\n     * bond delegate from the validator by the delegator\n     */\n    event CancelUnbondingDelegation(\n        address indexed delegatorAddress,\n        address indexed validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    );\n}\n",
    "abi": "[\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"creationHeight\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"CancelUnbondingDelegation\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"validator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"CreateValidator\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"delegator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"validator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Delegate\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"validator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"int256\",\n        \"name\": \"commissionRate\",\n        \"type\": \"int256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"int256\",\n        \"name\": \"minSelfDelegation\",\n        \"type\": \"int256\"\n      }\n    ],\n    \"name\": \"EditValidator\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"validatorSrcAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"validatorDstAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"completionTime\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redelegate\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"completionTime\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Undelegate\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"creationHeight\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"cancelUnbondingDelegation\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"moniker\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"identity\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"website\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"securityContact\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"details\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Description\",\n        \"name\": \"description\",\n        \"type\": \"tuple\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"rate\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"maxRate\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"maxChangeRate\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct CommissionRates\",\n        \"name\": \"commission\",\n        \"type\": \"tuple\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"minSelfDelegation\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"pubkey\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"createValidator\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"delegate\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"delegation\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address\",\n                \"name\": \"delegatorAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address\",\n                \"name\": \"validatorAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint8\",\n                    \"name\": \"precision\",\n                    \"type\": \"uint8\"\n                  }\n                ],\n                \"internalType\": \"struct Dec\",\n                \"name\": \"shares\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct Delegation\",\n            \"name\": \"delegation\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin\",\n            \"name\": \"balance\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct DelegationResponse\",\n        \"name\": \"response\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"delegatorDelegations\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address\",\n                \"name\": \"delegatorAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address\",\n                \"name\": \"validatorAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint8\",\n                    \"name\": \"precision\",\n                    \"type\": \"uint8\"\n                  }\n                ],\n                \"internalType\": \"struct Dec\",\n                \"name\": \"shares\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct Delegation\",\n            \"name\": \"delegation\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin\",\n            \"name\": \"balance\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct DelegationResponse[]\",\n        \"name\": \"response\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"delegatorUnbondingDelegations\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"delegatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"validatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"creationHeight\",\n                \"type\": \"int64\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"completionTime\",\n                \"type\": \"int64\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"initialBalance\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct UnbondingDelegationEntry[]\",\n            \"name\": \"entries\",\n            \"type\": \"tuple[]\"\n          }\n        ],\n        \"internalType\": \"struct UnbondingDelegation[]\",\n        \"name\": \"response\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"delegatorValidator\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"operatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"consensusPubkey\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"jailed\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"enum BondStatus\",\n            \"name\": \"status\",\n            \"type\": \"uint8\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"tokens\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"delegatorShares\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"moniker\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"identity\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"website\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"securityContact\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"details\",\n                \"type\": \"string\"\n              }\n            ],\n            \"internalType\": \"struct Description\",\n            \"name\": \"description\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"unbondingHeight\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"unbondingTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"rate\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"maxRate\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"maxChangeRate\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct CommissionRates\",\n                \"name\": \"commissionRates\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"updateTime\",\n                \"type\": \"int64\"\n              }\n            ],\n            \"internalType\": \"struct Commission\",\n            \"name\": \"commission\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"minSelfDelegation\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Validator\",\n        \"name\": \"validator\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"delegatorValidators\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"operatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"consensusPubkey\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"jailed\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"enum BondStatus\",\n            \"name\": \"status\",\n            \"type\": \"uint8\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"tokens\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"delegatorShares\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"moniker\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"identity\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"website\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"securityContact\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"details\",\n                \"type\": \"string\"\n              }\n            ],\n            \"internalType\": \"struct Description\",\n            \"name\": \"description\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"unbondingHeight\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"unbondingTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"rate\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"maxRate\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"maxChangeRate\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct CommissionRates\",\n                \"name\": \"commissionRates\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"updateTime\",\n                \"type\": \"int64\"\n              }\n            ],\n            \"internalType\": \"struct Commission\",\n            \"name\": \"commission\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"minSelfDelegation\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Validator[]\",\n        \"name\": \"validators\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"moniker\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"identity\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"website\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"securityContact\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"details\",\n            \"type\": \"string\"\n          }\n        ],\n        \"internalType\": \"struct Description\",\n        \"name\": \"description\",\n        \"type\": \"tuple\"\n      },\n      {\n        \"internalType\": \"int256\",\n        \"name\": \"commissionRate\",\n        \"type\": \"int256\"\n      },\n      {\n        \"internalType\": \"int256\",\n        \"name\": \"minSelfDelegation\",\n        \"type\": \"int256\"\n      }\n    ],\n    \"name\": \"editValidator\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"success\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"int64\",\n        \"name\": \"height\",\n        \"type\": \"int64\"\n      }\n    ],\n    \"name\": \"historicalInfo\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint64\",\n                    \"name\": \"block\",\n                    \"type\": \"uint64\"\n                  },\n                  {\n                    \"internalType\": \"uint64\",\n                    \"name\": \"app\",\n                    \"type\": \"uint64\"\n                  }\n                ],\n                \"internalType\": \"struct Consensus\",\n                \"name\": \"version\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"chainId\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"height\",\n                \"type\": \"int64\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"time\",\n                \"type\": \"int64\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"string\",\n                    \"name\": \"hash\",\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint32\",\n                        \"name\": \"total\",\n                        \"type\": \"uint32\"\n                      },\n                      {\n                        \"internalType\": \"string\",\n                        \"name\": \"hash\",\n                        \"type\": \"string\"\n                      }\n                    ],\n                    \"internalType\": \"struct PartSetHeader\",\n                    \"name\": \"partSetHeader\",\n                    \"type\": \"tuple\"\n                  }\n                ],\n                \"internalType\": \"struct BlockID\",\n                \"name\": \"lastBlockId\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"lastCommitHash\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"dataHash\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"validatorsHash\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"nextValidatorsHash\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"consensusHash\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"appHash\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"lastResultsHash\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"evidenceHash\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"proposerAddress\",\n                \"type\": \"string\"\n              }\n            ],\n            \"internalType\": \"struct Header\",\n            \"name\": \"header\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address\",\n                \"name\": \"operatorAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"consensusPubkey\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"jailed\",\n                \"type\": \"bool\"\n              },\n              {\n                \"internalType\": \"enum BondStatus\",\n                \"name\": \"status\",\n                \"type\": \"uint8\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokens\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"delegatorShares\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"string\",\n                    \"name\": \"moniker\",\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"internalType\": \"string\",\n                    \"name\": \"identity\",\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"internalType\": \"string\",\n                    \"name\": \"website\",\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"internalType\": \"string\",\n                    \"name\": \"securityContact\",\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"internalType\": \"string\",\n                    \"name\": \"details\",\n                    \"type\": \"string\"\n                  }\n                ],\n                \"internalType\": \"struct Description\",\n                \"name\": \"description\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"unbondingHeight\",\n                \"type\": \"int64\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"unbondingTime\",\n                \"type\": \"int64\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"rate\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"maxRate\",\n                        \"type\": \"uint256\"\n                      },\n                      {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"maxChangeRate\",\n                        \"type\": \"uint256\"\n                      }\n                    ],\n                    \"internalType\": \"struct CommissionRates\",\n                    \"name\": \"commissionRates\",\n                    \"type\": \"tuple\"\n                  },\n                  {\n                    \"internalType\": \"int64\",\n                    \"name\": \"updateTime\",\n                    \"type\": \"int64\"\n                  }\n                ],\n                \"internalType\": \"struct Commission\",\n                \"name\": \"commission\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"minSelfDelegation\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Validator[]\",\n            \"name\": \"valset\",\n            \"type\": \"tuple[]\"\n          }\n        ],\n        \"internalType\": \"struct HistoricalInfo\",\n        \"name\": \"historicalInfo\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"params\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"unbondingTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"uint32\",\n            \"name\": \"maxValidators\",\n            \"type\": \"uint32\"\n          },\n          {\n            \"internalType\": \"uint32\",\n            \"name\": \"maxEntries\",\n            \"type\": \"uint32\"\n          },\n          {\n            \"internalType\": \"uint32\",\n            \"name\": \"historicalEntries\",\n            \"type\": \"uint32\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"bondDenom\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"minCommissionRate\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Params\",\n        \"name\": \"params\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"pool\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"notBondedTokens\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"bondedTokens\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Pool\",\n        \"name\": \"pool\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorSrcAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorDstAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redelegate\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"completionTime\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"srcValidatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"dstValidatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"redelegations\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address\",\n                \"name\": \"delegatorAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address\",\n                \"name\": \"validatorSrcAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address\",\n                \"name\": \"validatorDstAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"int64\",\n                    \"name\": \"creationHeight\",\n                    \"type\": \"int64\"\n                  },\n                  {\n                    \"internalType\": \"int64\",\n                    \"name\": \"completionTime\",\n                    \"type\": \"int64\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"initialBalance\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"shareDst\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct RedelegationEntry[]\",\n                \"name\": \"entries\",\n                \"type\": \"tuple[]\"\n              }\n            ],\n            \"internalType\": \"struct Redelegation\",\n            \"name\": \"redelegation\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"int64\",\n                    \"name\": \"creationHeight\",\n                    \"type\": \"int64\"\n                  },\n                  {\n                    \"internalType\": \"int64\",\n                    \"name\": \"completionTime\",\n                    \"type\": \"int64\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"initialBalance\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"shareDst\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct RedelegationEntry\",\n                \"name\": \"redelegationEntry\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct RedelegationEntryResponse[]\",\n            \"name\": \"entries\",\n            \"type\": \"tuple[]\"\n          }\n        ],\n        \"internalType\": \"struct RedelegationResponse[]\",\n        \"name\": \"redelegationResponses\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"delegatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"unbondingDelegation\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"delegatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"validatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"creationHeight\",\n                \"type\": \"int64\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"completionTime\",\n                \"type\": \"int64\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"initialBalance\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct UnbondingDelegationEntry[]\",\n            \"name\": \"entries\",\n            \"type\": \"tuple[]\"\n          }\n        ],\n        \"internalType\": \"struct UnbondingDelegation\",\n        \"name\": \"response\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"undelegate\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"completionTime\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"validator\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"operatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"consensusPubkey\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"jailed\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"enum BondStatus\",\n            \"name\": \"status\",\n            \"type\": \"uint8\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"tokens\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"delegatorShares\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"moniker\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"identity\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"website\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"securityContact\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"details\",\n                \"type\": \"string\"\n              }\n            ],\n            \"internalType\": \"struct Description\",\n            \"name\": \"description\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"unbondingHeight\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"unbondingTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"rate\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"maxRate\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"maxChangeRate\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct CommissionRates\",\n                \"name\": \"commissionRates\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"updateTime\",\n                \"type\": \"int64\"\n              }\n            ],\n            \"internalType\": \"struct Commission\",\n            \"name\": \"commission\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"minSelfDelegation\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Validator\",\n        \"name\": \"validator\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"validatorDelegations\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address\",\n                \"name\": \"delegatorAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address\",\n                \"name\": \"validatorAddress\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint8\",\n                    \"name\": \"precision\",\n                    \"type\": \"uint8\"\n                  }\n                ],\n                \"internalType\": \"struct Dec\",\n                \"name\": \"shares\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct Delegation\",\n            \"name\": \"delegation\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"denom\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct Coin\",\n            \"name\": \"balance\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct DelegationResponse[]\",\n        \"name\": \"response\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"validatorAddr\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"validatorUnbondingDelegations\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"delegatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"validatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"creationHeight\",\n                \"type\": \"int64\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"completionTime\",\n                \"type\": \"int64\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"initialBalance\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct UnbondingDelegationEntry[]\",\n            \"name\": \"entries\",\n            \"type\": \"tuple[]\"\n          }\n        ],\n        \"internalType\": \"struct UnbondingDelegation[]\",\n        \"name\": \"response\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"enum BondStatus\",\n        \"name\": \"status\",\n        \"type\": \"uint8\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"key\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"offset\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"limit\",\n            \"type\": \"uint64\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"countTotal\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"reverse\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct PageRequest\",\n        \"name\": \"pagination\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"validators\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"operatorAddress\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"consensusPubkey\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"jailed\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"enum BondStatus\",\n            \"name\": \"status\",\n            \"type\": \"uint8\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"tokens\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"delegatorShares\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"string\",\n                \"name\": \"moniker\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"identity\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"website\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"securityContact\",\n                \"type\": \"string\"\n              },\n              {\n                \"internalType\": \"string\",\n                \"name\": \"details\",\n                \"type\": \"string\"\n              }\n            ],\n            \"internalType\": \"struct Description\",\n            \"name\": \"description\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"unbondingHeight\",\n            \"type\": \"int64\"\n          },\n          {\n            \"internalType\": \"int64\",\n            \"name\": \"unbondingTime\",\n            \"type\": \"int64\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"rate\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"maxRate\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"maxChangeRate\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct CommissionRates\",\n                \"name\": \"commissionRates\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"int64\",\n                \"name\": \"updateTime\",\n                \"type\": \"int64\"\n              }\n            ],\n            \"internalType\": \"struct Commission\",\n            \"name\": \"commission\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"minSelfDelegation\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct Validator[]\",\n        \"name\": \"validators\",\n        \"type\": \"tuple[]\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"bytes\",\n            \"name\": \"nextKey\",\n            \"type\": \"bytes\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"total\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct PageResponse\",\n        \"name\": \"pageResponse\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]"
  }
]